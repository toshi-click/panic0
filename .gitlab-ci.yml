# CI Lint tool
# https://gitlab.teamhack.io/ci/lint
---
stages:
  - pre-build
  - lint
  - deploy

# サブモジュールを更新する場合にはこれを有効にする
variables:
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  # ジョブ毎にキャッシュを共有する設定
  key: "$CI_JOB_NAME"
  untracked: true
  paths:
    - node_modules/

pre-npm-build:
  stage: pre-build
  image: node:latest
  script:
    - npm install
  artifacts:
    untracked: true
    paths:
      - vendor/

## filelint 改行コードを見たりする
filelint:
  stage: lint
  image: toshiclick/gitlab-ci-ansible-centos
  script:
    - yum install -y golang
    - echo export GOROOT=/usr/lib/golang >> ~/.bash_profile
    - echo export GOPATH=/usr/share/gocode >> ~/.bash_profile
    - echo export PATH=$PATH:$GOROOT/bin:$GOPATH/bin >> ~/.bash_profile
    - source ~/.bash_profile
    - go get -u github.com/synchro-food/filelint
    - /usr/share/gocode/bin/filelint .

htmlhint:
  stage: lint
  image: node:latest
  script:
    - npm run htmlhint

stylelint:
  stage: lint
  image: node:latest
  script:
    - npm run stylelint

# panic0.toshi.clickサーバへデプロイ
run_ansible_panic0:
  stage: deploy
  image: toshiclick/gitlab-ci-ansible-centos
  script:
    # リモートの最新に追従
    - git submodule foreach git pull origin master
    - echo -e "$TOSHI_KEY" > /builds/toshi_click/server/panic0/toshi.key
    - chmod 600 /builds/toshi_click/server/panic0/toshi.key
  #    - echo -e "$VAULT_PASS" > /builds/cs-admin/nw.cs.test/.ansible_vault_pass
  # サーバへプレイブックを実行
    - ansible-playbook -l prd -i provision/hosts/panic0.toshi.click.yml provision/11_prd.yml
    - ansible-playbook -l prd -i provision/hosts/panic0.toshi.click.yml provision/12_prd_service.yml
  #  - ansible-playbook -l prd2 -i provision/hosts/nw.cs.test.yml provision/12_production_service_start.yml --vault-pass /builds/cs-admin/nw.cs.test/.ansible_vault_pass
  #  - rm -fr /builds/cs-admin/gitlab_ci/.ansible_vault_pass
  only:
    - master
